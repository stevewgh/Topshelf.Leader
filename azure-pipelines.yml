trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  Version.MajorMinor: 1.1
  Version.Revision: $[counter(variables['Version.MajorMinor'], 2)]
  Version.Full: $(Version.MajorMinor).$(Version.Revision)

name: $(Version.MajorMinor).$(Version.Revision)

steps:

- task: DotNetCoreCLI@2
  name: Build
  inputs:
    command: 'build'
    projects: '**/*.sln'
    arguments: '-c $(buildConfiguration) /p:AssemblyVersion=$(Version.Full) /p:Version=$(Version.Full)'

- task: DotNetCoreCLI@2
  name: Pack
  inputs:
    command: 'pack'
    packagesToPack: '**/Topshelf.Leader.csproj'
    nobuild: true
    versioningScheme: 'byBuildNumber'

- task: DotNetCoreCLI@2
  name: Test
  inputs:
    command: 'test'
    projects: '**/Topshelf.Leader.Tests.csproj'

- task: PublishBuildArtifacts@1
  name: PublishArtifact
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'nugetPackage'
    publishLocation: 'Container'

- task: DotNetCoreCLI@2
  name: Publish
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '$(PublishVstsFeed)'